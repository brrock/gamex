name: Create GitHub PR from Gitea

on:
  workflow_dispatch:  # Manual trigger
    paths-ignore:
      - '.github/workflows/**'  # Avoid recursive triggers
  issue_comment:
    types: [created]

jobs:
  gh_pr:
    runs-on: ubuntu-latest
    if: ${{ github.event.comment.body == '!actions run pr' || github.event.pusher != '' || github.event.workflow_dispatch }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for better sync

      - name: Install GitHub CLI
        run: |
          curl -sS https://webi.sh/gh | sh
          source .bashrc
          gh auth login --with-token <<< "${{ secrets.GH_TOKEN }}"
      
      - name: Configure git
        run: |
          git config --global user.name "brrock"
          git config --global user.email "brduck@duck.com"
          
          # Setup .gitignore for workflow files
          if [ ! -f .gitignore ]; then
            touch .gitignore
          fi
          
          # Ensure workflow files are ignored
          grep -qxF '.github/workflows/ghpr.yaml' .gitignore || echo '.github/workflows/ghpr.yaml' >> .gitignore
          grep -qxF '.github/workflows/bosh.yaml' .gitignore || echo '.github/workflows/bosh.yaml' >> .gitignore
      
      - name: Add GitHub remote and push
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          # Clean up workflow files from git
          git rm --cached .github/workflows/ghpr.yaml 2>/dev/null || true
          git rm --cached .github/workflows/bosh.yaml 2>/dev/null || true
          
          # Add GitHub remote using token for authentication
          git remote add github https://${GH_TOKEN}@github.com/brrock/gamex.git
          
          # Create and checkout canary branch
          BRANCH_NAME=canary
          git checkout -b $BRANCH_NAME
          
          # Stage and commit gitignore changes
          git add .gitignore
          git commit -m "chore: update gitignore for workflow files" || true
          
          # Push to GitHub
          git push github $BRANCH_NAME --force
      
      - name: Create Pull Request
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
          
          # Check if PR already exists
          existing_pr=$(gh pr list \
            --repo brrock/gamex \
            --head $BRANCH_NAME \
            --json number \
            --jq '.[0].number')
          
          if [ -z "$existing_pr" ]; then
            # Create new PR
            gh pr create \
              --repo brrock/gamex \
              --base main \
              --head $BRANCH_NAME \
              --title "feat: sync changes from Gitea ($(date +%Y-%m-%d))" \
              --body "## Automated Sync from Gitea

              This PR contains the latest changes synchronized from the Gitea repository.
              
              ### Changes included:
              $(git log --pretty=format:'- %s' main..$BRANCH_NAME)
              
              Please review the changes carefully before merging."
          else
            echo "PR already exists with number #$existing_pr"
          fi
      
      - name: Cleanup
        if: always()
        run: |
          BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
          git checkout main
          git branch -D $BRANCH_NAME || true
