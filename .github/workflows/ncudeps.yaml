name: Update Dependencies

on:
  schedule:
    - cron: '0 12 */2 * *' # Runs every other day at 12:00 UTC
  workflow_dispatch: # Allows manual triggering of the action
  push:
    branches:
      - main

jobs:
  update-dependencies:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js (LTS)
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install npm-check-updates
        run: npm install -g npm-check-updates

      - name: Run npm-check-updates
        id: run-ncu
        run: |
          ncu -u > ncu.log || true
          cat ncu.log
          # Capture updated packages for commit message
          UPDATED_PACKAGES=$(grep -E '^\S+' ncu.log | sed 's/^[ \t]*//;s/[ \t]*$//' | head -n 10 | tr '\n' ', ')
          echo "UPDATED_PACKAGES=$UPDATED_PACKAGES" >> $GITHUB_ENV

      - name: Install updated dependencies
        id: install-dependencies
        run: |
          npm install > npm-install.log 2>&1 || echo "npm install failed" >> $GITHUB_ENV
        continue-on-error: true

      - name: Check for changes
        id: check-changes
        if: success()
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          git add package.json package-lock.json
          
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          else
            echo "Changes detected. Committing updates."
            COMMIT_MESSAGE="Chore: Update dependencies: ${{ env.UPDATED_PACKAGES }}"
            git commit -m "$COMMIT_MESSAGE"
            git push
          fi

      - name: Create GitHub Issue if npm install fails
        if: contains(steps.install-dependencies.outputs.npm_install_failed, 'true')
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const { GITHUB_TOKEN, GITHUB_REPOSITORY } = process.env;
            const [owner, repo] = GITHUB_REPOSITORY.split('/');

            const ncuLog = fs.readFileSync('ncu.log', 'utf8');
            const npmInstallLog = fs.readFileSync('npm-install.log', 'utf8');

            const issueTitle = 'Dependency Update Failed';
            const issueBody = `
            **Update failed during GitHub Action run**

            **npm-check-updates logs:**
            \`\`\`
            ${ncuLog}
            \`\`\`

            **npm install logs:**
            \`\`\`
            ${npmInstallLog}
            \`\`\`
            `;

            const octokit = new (require('@octokit/rest'))({ auth: process.env.GITHUB_TOKEN });

            await octokit.issues.create({
              owner,
              repo,
              title: issueTitle,
              body: issueBody
            });
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
